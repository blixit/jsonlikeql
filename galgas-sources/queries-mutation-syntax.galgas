
#------------------------------------------------------------
#	S E M A N T I Q U E   -   C L A S S
#------------------------------------------------------------

#------------------------------------------------------------
#	S Y N T A X
#------------------------------------------------------------

syntax extension jsonlikeql_syntax {

#	M U T A T I O N     Q U E R I E S
#------------------------------------------------------------

rule <queryMutator> 
	? @lchar queryType
	?! @Query query
	? @FunctionsMap functionsMap
	{ 
	$identifier$ ?let @lstring name 

	# détection des paramètres

	@ObjectLV parameters = .default;
	select or
	<function_parameters> !? parameters
	end  

	#[listeDesFonctions searchKey !functionName ?function ]

	#if (checkParameters(!parameters !fct_mParameters) == true) then

	#end

	# détection des champs de la requete

	@QueryMap fieldsQ = .default;
	@FieldsMap fieldsF = .default;

	<fieldsMutator> !queryType !?fieldsQ !?fieldsF	 

	@lstring returnedType = .default

	getFunctionReturnedType( !name !functionsMap !? returnedType);
 
	query = @MutateQuery.new{ !name !@lchar.new{!queryType !@location.here}  !parameters !returnedType !fieldsF } 
}

rule <fieldsMutator> 
	? @lchar queryType
	?! @QueryMap fieldsQ
	?! @FieldsMap fieldsF
	{
	
	${$ 
		@Query query = @Query.default;
		@LValue lvalue = .default;
		<fieldMutator> !queryType !?query !?lvalue

		if( [[[query name] string] length] > 0 ) then  
	 		[!? fieldsF insertKey ![query name] !lvalue] 
 		end

		select or
			$,$
			repeat
				query = @Query.default;
				lvalue = .default;
				<fieldMutator> !queryType !?query !?lvalue

				if( [[[query name] string] length] > 0 ) then  
			 		[!? fieldsF insertKey ![query name] !lvalue] 
		 		end
			while
			$,$
			end
		end
	$}$ 
}

rule <fieldMutator> 
	? @lchar queryType
	?! @Query query
	?! @LValue lvalue
	{
	$identifier$ ?let @lstring name

	@ObjectLV parameters = .default;
 
	@FieldsMap fields = .default; 
 
	$=$ <value_definition> !? lvalue
 
	query = @MutateQuery.new{ !name !@lchar.new{!queryType !@location.here}  !parameters !.default !fields }
}

}

#------------------------------------------------------------
#	S E M A N T I Q U E   -   F U N C T I O N S
#------------------------------------------------------------

override method @MutateQuery toSql 
	?!@string sql
	{
	sql = "";
	sql += "/* Requete MUTATE `"+name.string +"` */\n"


	if ( [queryType char] == '+') then 
		sql += "INSERT INTO ";

		sql += "`fakeTable` " ;

		sql += "VALUES (...) ";
	else
		sql += "UPDATE ";

		sql += "`fakeTable` " ;

		sql += "SET ... ";
	end


		

	sql += ";\n";
}

#------------------------------------------------------------
#	S E M A N T I Q U E   -   C L A S S
#------------------------------------------------------------

# Eénumération des propagations possibles
enum @Propagation{ 
	case default_
	case full_
}

#Définition d'une requete
class @Query{
	@lstring name
	@lchar queryType  
	@ObjectLV parameters
	@lstring returnedType   
}
	method @Query toSql 
		?!@string sql
	{ sql = .default; }


class @SelectQuery : @Query{
	@QueryMap fields
	@Propagation propagation
} 

class @MutateQuery : @Query{
	@FieldsMap fields 
} 

class @DeleteQuery : @Query{ 
} 

map @QueryMap{
	@Query query
	insert insertKey error message "the '%K' query has been already declared"
	search searchKey error message "the '%K' query is not declared"
}

map @FieldsMap{
	@LValue lvalue
	insert insertKey error message "the '%K' field has been already declared"
	search searchKey error message "the '%K' field is not declared"
}

#------------------------------------------------------------
#	S Y N T A X
#------------------------------------------------------------

syntax extension jsonlikeql_syntax {

rule <queries_container> 
	?! @QueryMap queryMap
	?! @FunctionsMap functionsMap
	{  

	@lchar queryType = .default;
	select 
		$:$ queryType.char = ':'

		@Query query = .default;

	 	<query> ! queryType !? query ! functionsMap

	 	@lstring key = @lstring.new{![[queryMap count] string] !@location.here}; 
	 	[!? queryMap insertKey !key !query] 

		repeat
		while
			query = @Query.default;
			<query> ! queryType !? query ! functionsMap
			key = @lstring.new{![[queryMap count] string] !@location.here}; 
	 		[!? queryMap insertKey !key !query] 
		end
	or	
		select 
			$+$	queryType.char = '+'	
		or	$!$	queryType.char = '!' 
		end 

		@Query query = .default;

	 	<queryMutator> ! queryType !? query ! functionsMap

	 	@lstring key = @lstring.new{![[queryMap count] string] !@location.here}; 
	 	[!? queryMap insertKey !key !query] 

		repeat
		while
			query = @Query.default;
			<queryMutator> ! queryType !? query ! functionsMap
			key = @lstring.new{![[queryMap count] string] !@location.here}; 
	 		[!? queryMap insertKey !key !query] 
		end
	or 
		$-$	queryType.char = '-'
		@Query query = .default;

	 	<queryDelete> ! queryType !? query ! functionsMap

	 	@lstring key = @lstring.new{![[queryMap count] string] !@location.here}; 
	 	[!? queryMap insertKey !key !query] 

		repeat
		while
			query = @Query.default;
			<queryDelete> ! queryType !? query ! functionsMap
			key = @lstring.new{![[queryMap count] string] !@location.here}; 
	 		[!? queryMap insertKey !key !query] 
		end
	end	 	
}

}

#------------------------------------------------------------
#	S E M A N T I Q U E   -   F U N C T I O N S
#------------------------------------------------------------

method @Query getMainTable
	?! @string table
	{

	table = ""; 

	if( [returnedType.string length] == 0) then 
		table = name.string; 
	else
		table = returnedType.string;
	end

	if( [table containsCharacter !'*']  ==  true ) then 
		table = [table subStringFromIndex !1] 
	end
}

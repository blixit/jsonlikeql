
#------------------------------------------------------------
#	S E M A N T I Q U E   -   C L A S S
#------------------------------------------------------------

#------------------------------------------------------------
#	S Y N T A X
#------------------------------------------------------------

syntax extension jsonlikeql_syntax {

rule <primitive_lvalue> ?!@luint pi ?!@ldouble pd ?!@lstring ps ?!@lchar pc ?!@lbool pb {
	select 
		$integer$ ?let @luint i
		pi = i
	or
		$real$ ?let @ldouble d
		pd = d
	or
		$"string"$ ?let @lstring s
		ps = s
	or
		$'char'$ ?let @lchar c
		pc = c
	or
		<bool_definition> !? pb 
	end
}

rule <bool_definition> ?!@lbool b{
	select 
		$true$ 
		b = @lbool.new{!true !@location.here} 
	or
		$false$ 
		b = @lbool.new{!false !@location.here} 
	end
}

rule <object_definition> { #?!@MemberList members {
	#un objet  

	${$ 
		select or		
			repeat
				#@LValue lvalue = @LValue.default;

				$identifier$ ?let @lstring key $:$ <value_definition> #!?lvalue 

				#members += !@Member.new{!key.string !lvalue}
			while
			$,$
			end
		end
	$}$ 
}

rule <value_definition> { #?!@LValue lvalue {
	select
		$integer$ ?let @luint value
		#lvalue = @IntegerLV.new{!@location.here !value.uint} 
	or
		$real$ ?let @ldouble value
		#lvalue = @IntegerLV.new{!@location.here !value.uint} 
	or
		$'char'$ ?let @lchar value
		#lvalue = ...
	or
		$"string"$ ?let @lstring value
		#lvalue = @StringLV.new{!@location.here !value.string} 
	#or 
		#@lbool value = .default
		#<bool_definition> !? value 
		#lvalue = @BoolLV.new{!@location.here !value.bool}
	or 
		#@LValueList items = {};
		<array_definition> # !?items
		#lvalue = @ArrayLV.new{!@location.here !items} 
	or
		#@MemberList members = {};
		<object_definition> #!?members
		#lvalue = @ObjectLV.new{!@location.here !members} 
	end
}

rule <array_definition> { #?!@LValueList items {
	$[$
	select or  
		repeat
			#@LValue lvalue = @LValue.default;
			<value_definition> #!? lvalue 
			#items += !lvalue;
		while
		$,$
		end
	end
	$]$
}

}

#------------------------------------------------------------
#	S E M A N T I Q U E   -   F U N C T I O N S
#------------------------------------------------------------